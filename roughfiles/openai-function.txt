import os  
import base64
from openai import AzureOpenAI  
from azure.identity import DefaultAzureCredential, get_bearer_token_provider  
        
endpoint = os.getenv("ENDPOINT_URL", "https://legal-chatbot-model.openai.azure.com/")  
deployment = os.getenv("DEPLOYMENT_NAME", "gpt-4o")  
      
# Initialize Azure OpenAI Service client with Entra ID authentication
token_provider = get_bearer_token_provider(  
    DefaultAzureCredential(),  
    "https://cognitiveservices.azure.com/.default"  
)  
  
client = AzureOpenAI(  
    azure_endpoint=endpoint,  
    azure_ad_token_provider=token_provider,  
    api_version="2024-05-01-preview",  
)  
  

# IMAGE_PATH = "YOUR_IMAGE_PATH"
# encoded_image = base64.b64encode(open(IMAGE_PATH, 'rb').read()).decode('ascii')
chat_prompt = [
    {
        "role": "system",
        "content": [
            {
                "type": "text",
                "text": "You are an AI assistant that helps people find information."
            }
        ]
    }
] 
    
# Include speech result if speech is enabled  
messages = chat_prompt 

completion = client.chat.completions.create(  
    {
    "messages": [
      {
        "role": "user",
        "content": "wordpress"
      }
    ],
    "temperature": 0.1,
    "max_tokens": 4096,
    "top_p": 0.95,
    "stop": null,
    "stream": true,
    "model": "gpt-4o",
    "user": "{\"EndUserId\": \"00000000-0000-0000-0000-000000000000\", \"EndUserIdType\": \"EntraId\", \"SourceIp\": \"127.0.0.1\", \"SourceRequestHeaders\": {\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36\"}, \"ConversationId\": null, \"ApplicationName\": \"Chatbot\"}",
    "extra_body": {
      "data_sources": [
        {
          "type": "azure_search",
          "parameters": {
            "top_n_documents": 20,
            "strictness": 3,
            "in_scope": true,
            "index_name": "sentence-transformer-index",
            "semantic_configuration": "semantic-config",
            "query_type": "vector_semantic_hybrid",
            "endpoint": "https://legal-chatbot-search.search.windows.net",
            "authentication": {
              "type": "api_key",
              "key": ""
            },
            "embedding_dependency": {
              "type": "endpoint",
              "endpoint": app_settings.azure_openai.embedding_endpoint, 
              "authentication": {
                "type": "api_key",
                "key": app_settings.azure_openai.embedding_key
              }
          },
            "fields_mapping": {
              "content_fields": [
                "content"
              ],
              "title_field": "title",
              "url_field": "url",
              "filepath_field": "file",
              "vector_fields": [
                "contentVector"
              ]
            },
            "allow_partial_result": false,
            "include_contexts": [
              "citations",
              "intent"
            ],
            "role_information": "you are an ai assistant tasked to answer questions based on the pdf documents."
          }
        }
      ]
    }
  }
   
)  
  
print(completion.to_json())  